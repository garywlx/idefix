# Require cmake version
cmake_minimum_required(VERSION 3.7)

# include directories
include_directories(./include)

# set c++ standard
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

# built my own version of llvm for c++11 on macos https://libcxx.llvm.org/docs/index.html
add_compile_options(-std=c++11)

if(NOT APPLE)
	message(STATUS "Unix compiling...")
	# unix compiling
	set(CMAKE_C_COMPILER clang)
	set(CMAKE_CXX_COMPILER clang++)
add_compile_options("-stdlib=libc++" "-lc++abi" "-I/usr/local/llvm-6.0.1/include/c++/v1" "-v")
#	add_compile_options(-stdlib=libc++)
#	add_compile_options(-I/usr/local/llvm-6.0.1/include/c++/v1 -v)
#	add_compile_options(-L/usr/local/llvm-6.0.1/lib)
#	add_compile_options(-Wl,-rpath,/usr/local/llvm-6.0.1/lib)
elseif(APPLE)
	message(STATUS "Apple compiling...")
	# apple compiling
	add_compile_options(-stdlib=libc++)
	add_compile_options(-I/usr/local/llvm/include/c++/v1)
	add_compile_options(-nostdinc++)
endif(NOT APPLE)

#add_compile_options(-L/usr/local/llvm/lib) # clang: warning: argument unused during compilation
#add_compile_options(-Wl,-rpath,/usr/local/llvm/lib) # clang: warning: argument unused during compilation

add_compile_options(-Wno-c++98-compat)

# set build type
set(CMAKE_BUILD_TYPE Debug)

# Change this to your project name
project(idefix) #  VERSION 0.1.0 LANGUAGES CXX

# import src/CMakeLists.txt
add_subdirectory(src)
